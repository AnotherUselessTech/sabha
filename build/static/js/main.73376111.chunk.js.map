{"version":3,"sources":["DevicesMenu.js","Meet.js","Chat.js","NativeMeet.js","urls.js","TextNSpeech.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","DevicesMenu","props","mics","speakers","cameras","jitsiApi","classes","React","useState","open","setOpen","label","selectedMic","setSelectedMic","selectedSpeaker","setSelectedSpeaker","selectedCamera","setSelectedCamera","handleClose","getDeviceId","deviceType","device","console","log","deviceId","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","className","style","flexDirection","id","FormControl","InputLabel","htmlFor","Select","value","onChange","e","target","setAudioInputDevice","input","Input","map","mic","MenuItem","name","labelId","setAudioOutputDevice","speaker","setVideoInputDevice","camera","marginTop","marginLeft","Typography","pos","jarjar","Audio","play","src","DialogActions","Button","color","inputStyle","width","lineHeight","borderRadius","border","padding","backgroundColor","buttonStyle","fontSize","divStyle","alignItems","inputDiv","flex","buttonDiv","meetStyle","toolbarStyleWhenYouSee","position","bottom","justifyContent","opacity","toolbarStyleWhenYouDontSee","transition","Meet","jitsiState","setJitsiState","roomName","setRoomName","displayName","setDisplayName","jitsiFrame","setJitsitFrame","micEnabled","setMicEnabled","videoEnabled","setVideoEnabled","screenShareEnabled","setScreenShareEnabled","tileViewEnabled","setTileViewEnabled","mouseMoving","setMouseMoving","menuOpen","setMenuOpen","fullScreenMenu","setFullScreenMenu","allDevices","setAllDevices","anchorRef","useRef","prevOpen","options","height","parentNode","userInfo","onload","document","getElementById","divId","children","interfaceConfigOverwrite","TOOLBAR_BUTTONS","useEffect","JitsiMeetExternalAPI","window","jitsi","addEventListener","executeCommand","getAvailableDevices","then","res","devices","audioInput","audioOutput","videoInput","setTimeout","innerHeight","screen","current","focus","handleMenuToggle","handleMenuClose","devicesMenu","contains","event","handleFullScreen","webkitRequestFullscreen","webkitExitFullscreen","onMouseMove","IconButton","ChatBubble","PanTool","MicRounded","MicOffRounded","VideoCallRounded","VideocamOffRounded","StopScreenShareRounded","ScreenShareRounded","dispose","CallEndRounded","marginRight","ViewComfyRounded","PersonRounded","PeopleRounded","ref","aria-controls","undefined","aria-haspopup","MoreVertRounded","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","Chat","userName","setUserName","chatStarted","setrChatStarted","chatInput","setChatInput","chatsData","allChat","setAllChat","socket","io","emit","on","chats","dontlook","collectAndSortMessages","allChats","sort","a","b","time","getTimeString","timeStamp","Date","Number","getHours","getMinutes","message","user","backgroundImage","onSubmit","preventDefault","username","getTime","text","push","type","placeholder","key","RTCPeerConnection","RTCSessionDescription","peerConnection","videoDiv","video","NativeMeet","streamedVideo","setStreamedVideo","allUsers","setAllUsers","localVideo","process","PORT","serverUrl","isAlreadyCalling","users","updateUserList","socketId","elToRemove","remove","data","setRemoteDescription","offer","createAnswer","answer","setLocalDescription","to","callUser","navigator","getUserMedia","audio","stream","srcObject","getTracks","forEach","track","addTrack","error","warn","ontrack","remoteVideo","streams","msg","newMedia","MediaStream","actualMedia","concat","createOffer","autoPlay","muted","text2Speech","speech2Text","TextNSpeech","synth","speechSynthesis","voices","getVoices","grammar","join","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","recognition","webkitSpeechRecognitionEvent","speechRecognitionList","addFromString","grammars","continuous","interimResults","lang","onspeechend","stop","setIsRecording","onresult","textAreaRef","results","transcript","onnomatch","onerror","t2S","isRecording","start","onstart","ArrowRightAltRounded","TextareaAutosize","aria-label","rowsMin","SpeechSynthesisUtterance","voice","speak","App","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.73376111.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport SurroundSoundRoundedIcon from '@material-ui/icons/SurroundSoundRounded';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nexport default function DevicesMenu(props) {\r\n    const { mics, speakers, cameras, jitsiApi } = props;\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedMic, setSelectedMic] = React.useState(mics[0] ? mics[0].label : 'select one');\r\n    const [selectedSpeaker, setSelectedSpeaker] = React.useState(speakers[0] ? speakers[0].label : 'select one')\r\n    const [selectedCamera, setSelectedCamera] = React.useState(cameras[0] ? cameras[0].label : 'select one')\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const getDeviceId = (label, deviceType) => {\r\n        for(let device in props[deviceType]) {\r\n            if(props[deviceType][device].label === label) {\r\n                console.log(props[deviceType][device].deviceId);\r\n                return props[deviceType][device].deviceId;\r\n            }\r\n        }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <span onClick={handleClickOpen}>Settings</span>\r\n        <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n          <DialogTitle>Device Manager</DialogTitle>\r\n          <DialogContent >\r\n            <form className={classes.container} style = {{display: 'flex', flexDirection: 'column'}} id = \"devicesMenu\">\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"demo-dialog-native\">Microphone</InputLabel>\r\n                <Select\r\n                  value={selectedMic}\r\n                  onChange={(e) => {setSelectedMic(e.target.value);jitsiApi.setAudioInputDevice(e.target.value,getDeviceId(e.target.value, 'mics'))}}\r\n                  input={<Input id=\"demo-dialog-native\" />}\r\n                >\r\n                  {mics.map(mic => <MenuItem name={mic.deviceId} value={mic.label} id={mic.deviceId}>{mic.label}</MenuItem>)}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-dialog-select-label\">Speaker</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-dialog-select-label\"\r\n                  id=\"demo-dialog-select\"\r\n                  value={selectedSpeaker}\r\n                  onChange={(e) => {setSelectedSpeaker(e.target.value);jitsiApi.setAudioOutputDevice(e.target.value,getDeviceId(e.target.value, 'speakers'))}}\r\n                  input={<Input />}\r\n                >\r\n                  {speakers.map(speaker => <MenuItem name = {speaker.deviceId} value={speaker.label} id={speaker.deviceId}>{speaker.label}</MenuItem>)}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-dialog-select-label2\">Camera</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-dialog-select-labele\"\r\n                  id=\"demo-dialog-selecte\"\r\n                  value={selectedCamera}\r\n                  onChange={(e) => {setSelectedCamera(e.target.value);jitsiApi.setVideoInputDevice(e.target.value,getDeviceId(e.target.value, 'cameras'))}}\r\n                  input={<Input />}\r\n                >\r\n                  {cameras.map(camera => <MenuItem name = {camera.deviceId} value={camera.label} id={camera.deviceId}>{camera.label}</MenuItem>)}\r\n                </Select>\r\n              </FormControl>\r\n            </form>\r\n            <div style = {{display: 'flex', flexDirection: 'row', marginTop: '10px', marginLeft: '7px'}}>\r\n                <Typography className={classes.pos}>\r\n                    Play a test sound \r\n                </Typography>\r\n                <SurroundSoundRoundedIcon style ={{marginLeft: '8px'}} onClick={() => {\r\n                    const jarjar = new Audio('/gonnadie.wav');\r\n                    console.log(jarjar);\r\n                    jarjar.play();\r\n                }}/>\r\n                <audio id=\"jarjar\" src=\"./gonnadie.wav\"></audio>\r\n            </div>\r\n            \r\n          </DialogContent>\r\n          \r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","\r\n/* eslint-disable */\r\nimport React, {useState, useEffect, Fragment} from 'react';\r\nimport { IconButton, Menu, MenuItem, ClickAwayListener, Popper, Grow, MenuList, Paper } from '@material-ui/core';\r\nimport { ChatBubble, PanTool, MicRounded, \r\n    VideoCallRounded, MicOffRounded, VideocamOffRounded, \r\n    PeopleRounded, ScreenShareRounded, StopScreenShareRounded, CallEndRounded,\r\n    ViewComfyRounded, PersonRounded, MoreVertRounded  } from '@material-ui/icons';\r\nimport DevicesMenu from './DevicesMenu';\r\n\r\nconst inputStyle = {\r\n    width:'30%',\r\n    lineHeight: 2.5,\r\n    borderRadius: '4px',\r\n    border: '1px solid green',\r\n    padding: '5px',\r\n    backgroundColor:'#dcf4d1',\r\n    marginLeft: '10px'\r\n}\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: 'deepskyblue',\r\n    lineHeight: 2.5,\r\n    fontSize: 'medium',\r\n    borderRadius: '4px',\r\n    width: '30%',\r\n    marginTop: '30px'\r\n}\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    margin: '10%',\r\n    marginLeft: '30%',\r\n    width: '50%',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst inputDiv = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    margin: '10px',\r\n    alignItems: 'center',\r\n    flex: 1\r\n}\r\n\r\nconst buttonDiv = {\r\n    width: '100%',\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'flex-end'\r\n}\r\n\r\nconst meetStyle = {\r\n    // position: 'fixed'\r\n}\r\n\r\nconst toolbarStyleWhenYouSee = {\r\n    position: 'relative',\r\n    bottom: '70px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    opacity: '1'\r\n}\r\n\r\nconst toolbarStyleWhenYouDontSee = {\r\n    ...toolbarStyleWhenYouSee,\r\n    opacity: 0,\r\n    transition: 'opacity 1s ease-in-out'\r\n}\r\n\r\nexport default function Meet(props) {\r\n    \r\n    let [jitsiState, setJitsiState] = useState(false);\r\n    let [roomName, setRoomName] = useState('');\r\n    let [displayName, setDisplayName] = useState('Fellow Jitser');\r\n    let [jitsiFrame, setJitsitFrame] = useState();\r\n    let [micEnabled, setMicEnabled] = useState(true);\r\n    let [videoEnabled, setVideoEnabled] = useState(true);\r\n    let [screenShareEnabled, setScreenShareEnabled] = useState(false);\r\n    let [tileViewEnabled, setTileViewEnabled] = useState(false);\r\n    let [mouseMoving, setMouseMoving] = useState(false);\r\n    let [anchorMenu, setAnchorMenu] = useState(null);\r\n    let [menuOpen, setMenuOpen] = useState(false);\r\n    let [fullScreenMenu, setFullScreenMenu] = useState(\"Full Screen\");\r\n    let [allDevices, setAllDevices] = useState({mics:[], cameras: [], speakers: []});\r\n\r\n    const anchorRef = React.useRef(null);\r\n    const prevOpen = React.useRef(menuOpen);\r\n  \r\n    const domain = 'meet.jit.si';\r\n    const options = {\r\n      roomName: roomName,\r\n      height: '40em',\r\n      parentNode: '',\r\n      userInfo: {\r\n          displayName\r\n      },\r\n      onload: () => {\r\n        console.log(\"After load of iframe\");\r\n        const iframe = document.getElementById(props.divId).children[0];\r\n        iframe.style[\"pointer-events\"] = \"none\";\r\n      },\r\n      interfaceConfigOverwrite: {TOOLBAR_BUTTONS: []}\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n          if(jitsiState && roomName && !jitsiFrame) {\r\n              console.log(\"************************\\n\" + document.getElementById(props.divId));\r\n              const JitsiMeetExternalAPI = window.JitsiMeetExternalAPI;\r\n              setJitsiState(true);\r\n              options.parentNode = document.getElementById(props.divId);\r\n              // setJitsiParentNode(document.getElementById('meet'));\r\n              console.log(window.JitsiMeetExternalAPI);\r\n              const jitsi = new JitsiMeetExternalAPI(domain, options);\r\n              jitsi.addEventListener('screenSharingStatusChanged', (e) => {console.log(e);setScreenShareEnabled(!screenShareEnabled)});\r\n              jitsi.executeCommand('toggleFilmStrip');\r\n              jitsi.getAvailableDevices().then(res => {\r\n                  console.log(\"######################\",res);\r\n                  const devices = {\r\n                      mics: res.audioInput,\r\n                      speakers: res.audioOutput,\r\n                      cameras: res.videoInput\r\n                  };\r\n                  setAllDevices(devices);\r\n                });\r\n              setJitsitFrame(jitsi);\r\n          }\r\n        \r\n      }, [jitsiState,options,props.divId,roomName,jitsiFrame]);\r\n\r\n      useEffect(() => {\r\n        if(mouseMoving) {\r\n            setTimeout(() => {\r\n                setMouseMoving(false);\r\n            }, 3000);\r\n        }\r\n      });\r\n\r\n      useEffect(() => {\r\n        if( (window.innerHeight !== screen.height) && jitsiFrame) {\r\n            // browser is not fullscreen\r\n            document.getElementById(props.divId).children[0].style[\"height\"] = \"40em\";\r\n            setFullScreenMenu('Full Screen');\r\n        }\r\n      },[window.innerHeight !== screen.height]);\r\n\r\n      React.useEffect(() => {\r\n        if (prevOpen.current === true && menuOpen === false) {\r\n          anchorRef.current.focus();\r\n        }\r\n    \r\n        prevOpen.current = menuOpen;\r\n      }, [menuOpen]);\r\n\r\n      const handleMenuClick = (event) => {\r\n        setAnchorMenu(event.currentTarget);\r\n      };\r\n\r\n      const handleMenuToggle = () => {\r\n        setMenuOpen((prevOpen) => !prevOpen);\r\n      };\r\n    \r\n      const handleMenuClose = () => {\r\n        // setAnchorMenu(null);\r\n        const devicesMenu = document.getElementById(\"devicesMenu\");\r\n        console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&\", devicesMenu);\r\n        if (anchorRef.current && (anchorRef.current.contains(event.target) || devicesMenu)) {\r\n            console.log(\"doin nuthin\")\r\n            return;\r\n          }\r\n          console.log(\"Closing the shit\")\r\n          setMenuOpen(false);\r\n      };\r\n\r\n      const handleFullScreen = () => {\r\n        if(fullScreenMenu === 'Full Screen') {\r\n            document.getElementById('meetingParent').webkitRequestFullscreen();\r\n            document.getElementById(props.divId).children[0].style[\"height\"] = \"54em\";\r\n            setFullScreenMenu('Exit Full Screen');\r\n            setMenuOpen(false);\r\n        }\r\n        else {\r\n            document.webkitExitFullscreen();\r\n        }   \r\n      }\r\n\r\n    const toolbarContent = () => {\r\n        return (\r\n            <div style={mouseMoving ? toolbarStyleWhenYouSee : toolbarStyleWhenYouDontSee}>\r\n                        <div style = {{marginLeft: '10px'}}>\r\n                            <IconButton onClick = {() => {jitsiFrame.executeCommand(\"toggleChat\")}}><ChatBubble style={{color: 'white'}}/></IconButton>\r\n                            <IconButton onClick = {() => {jitsiFrame.executeCommand('')}}><PanTool style={{color: 'white'}} /></IconButton>\r\n                        </div>\r\n                        <div>\r\n                            <IconButton onClick = {() => {\r\n                                setMicEnabled(!micEnabled);\r\n                            jitsiFrame.executeCommand('toggleAudio')}}>{micEnabled ? <MicRounded style={{color: 'white'}}/> : <MicOffRounded style={{color: 'white'}}/>}</IconButton>\r\n                            <IconButton onClick = {() => {\r\n                                setVideoEnabled(!videoEnabled);\r\n                            jitsiFrame.executeCommand('toggleVideo')}}>{videoEnabled ? <VideoCallRounded style={{color: 'white'}}/> : <VideocamOffRounded style={{color: 'white'}}/>}</IconButton>\r\n                            <IconButton onClick = {() => {\r\n                                setScreenShareEnabled(!screenShareEnabled);\r\n                            jitsiFrame.executeCommand('toggleShareScreen')}}>{!screenShareEnabled ? <ScreenShareRounded style={{color: 'white'}}/> : <StopScreenShareRounded style={{color: 'white'}}/>}</IconButton>\r\n                            <IconButton onClick = {() => {\r\n                                jitsiFrame.executeCommand('hangup');\r\n                                jitsiFrame.dispose();\r\n                                setJitsiState(false);\r\n                                setJitsitFrame(null);\r\n                            }}><CallEndRounded style={{color: 'red'}}/></IconButton>\r\n                        </div>\r\n                        <div style = {{marginRight: '10px'}}>\r\n                            <IconButton onClick = {() => {\r\n                                setTileViewEnabled(!tileViewEnabled);\r\n                            jitsiFrame.executeCommand('toggleTileView')}}>{tileViewEnabled ? <ViewComfyRounded style={{color: 'white'}}/> : <PersonRounded style={{color: 'white'}}/>}</IconButton>\r\n                            \r\n                            <IconButton><PeopleRounded onClick={() => {jitsiFrame.executeCommand('toggleFilmStrip');}} style={{color: 'white'}}/></IconButton>\r\n                            <Fragment>\r\n                                <IconButton \r\n                                    ref={anchorRef}\r\n                                    aria-controls={menuOpen ? 'menu-list-grow' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleMenuToggle}><MoreVertRounded style={{color: 'white'}}/></IconButton>\r\n                                <Popper open={menuOpen} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                    {({ TransitionProps, placement }) => (\r\n                                        <Grow\r\n                                        {...TransitionProps}\r\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                                        >\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={handleMenuClose}>\r\n                                            <MenuList autoFocusItem={menuOpen} id=\"menu-list-grow\">\r\n                                                <MenuItem onClick={handleFullScreen}>{fullScreenMenu}</MenuItem>\r\n                                                <MenuItem onClick={() => {jitsiFrame.executeCommand('muteEveryone');}}>Mute Everyone</MenuItem>\r\n                                                <MenuItem><DevicesMenu {...allDevices} jitsiApi = {jitsiFrame} /></MenuItem>\r\n                                            </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                        </Grow>\r\n                                    )}\r\n                                </Popper>\r\n                            </Fragment>\r\n                        </div>    \r\n                    </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           {!jitsiState ?\r\n                <div style={{height: '30em'}}>\r\n                <div style={divStyle}>\r\n                        <div style = {inputDiv}>\r\n                            <span>Room Name</span>\r\n                            <input style={inputStyle} onChange = {(e)=>{setRoomName(e.target.value)}}></input>\r\n                        </div>\r\n                        <div style = {inputDiv}>\r\n                            <span>User Name &nbsp;</span>\r\n                            <input style={inputStyle} onChange = {(e)=>{setDisplayName(e.target.value)}}></input>\r\n                        </div>\r\n                        <div style = {buttonDiv}>\r\n                            <button style={buttonStyle} onClick = {() => {setJitsiState(true)}}>Join Room</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div id=\"meetingParent\" style={{position: 'relative'}}>\r\n                    <div style={meetStyle} id=\"meet\" onMouseMove ={(e) => {\r\n                        setMouseMoving(true)}}/>\r\n                    {toolbarContent()}\r\n                   \r\n                </div>\r\n           }\r\n\r\n        </div>\r\n        \r\n    )\r\n}","/* eslint-disable */\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n// import Chat2 from './Chat2';\r\nimport './ChatStyles.css';\r\n// import { serverUrl } from './urls';\r\n\r\nconst inputStyle = {\r\n    width: '30%',\r\n    lineHeight: 2.5,\r\n    borderRadius: '4px',\r\n    border: '1px solid green',\r\n    padding: '5px',\r\n    backgroundColor: '#dcf4d1',\r\n    marginLeft: '10px'\r\n}\r\n\r\nconst chatInputStyle = {\r\n    width: '50%',\r\n    lineHeight: 2.5,\r\n    borderRadius: '4px',\r\n    border: '1px solid green',\r\n    padding: '5px',\r\n    backgroundColor: '#dcf4d1',\r\n    marginLeft: '10px'\r\n}\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: 'lightgreen',\r\n    lineHeight: 2.5,\r\n    fontSize: 'medium',\r\n    borderRadius: '4px',\r\n    width: '30%',\r\n    marginTop: '30px'\r\n}\r\n\r\nconst chatButtonStyle = {\r\n    backgroundColor: 'lightgreen',\r\n    lineHeight: 1.5,\r\n    fontSize: 'medium',\r\n    borderRadius: '4px',\r\n    width: '30%',\r\n    marginTop: '30px'\r\n}\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    margin: '10%',\r\n    marginLeft: '30%',\r\n    width: '50%',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst inputDiv = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    margin: '10px',\r\n    alignItems: 'center',\r\n    flex: 1\r\n}\r\n\r\nconst buttonDiv = {\r\n    width: '100%',\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'flex-end'\r\n}\r\n\r\nconst Chat = () => {\r\n    const [userName, setUserName] = useState('');\r\n    const [roomName, setRoomName] = useState('');\r\n    const [chatStarted, setrChatStarted] = useState(false);\r\n    const [chatInput, setChatInput] = useState('');\r\n    const [otherChat, setOtherChat] = useState({});\r\n    const [myChat, setMyChat] = useState({});\r\n    const [allChat, setAllChat] = useState({chatsData: []});\r\n\r\n    const setUsersData = (chats, othersChatSet, myChatSet) => {\r\n        Object.keys(chats.chatsData).forEach(user => {\r\n            if (chats.chatsData[user].messages.length) {\r\n                if (user !== userName) {\r\n                    if (othersChatSet[user] && (chats.chatsData[user].messages.length !== othersChatSet[user].messages.length)) {\r\n                        console.log(1)\r\n                        othersChatSet[user] = { username: user, messages: chats.chatsData[user].messages };\r\n                        console.log(2)\r\n                        console.log(\"others chat changed\");\r\n                    }\r\n                    else if (!othersChatSet[user]) {\r\n                        othersChatSet[user] = { username: user, messages: chats.chatsData[user].messages };\r\n                        console.log(\"others chat created\");\r\n                    }\r\n                }\r\n                else {\r\n                    if (myChat[user] && (chats.chatsData[user].messages.length !== myChat[user].messages.length)) {\r\n                        myChatSet[user] = { username: user, messages: chats.chatsData[user].messages };\r\n                        console.log(\"my chat changed\");\r\n                    }\r\n                    else if (!myChatSet[user]) {\r\n                        myChatSet[user] = { username: user, messages: chats.chatsData[user].messages }\r\n                        console.log(\"my chat created\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(chatStarted) {\r\n            console.log(\"In effect, without socket!\")\r\n            // const socket = io(window.location.origin, {transports: ['websocket']});\r\n            const socket = io();\r\n            socket.emit('initialize', {roomName});\r\n            socket.on('otherschatreplies', (chats) => {\r\n            let myChatSet = {};\r\n            let othersChatSet = {};\r\n            // setUsersData(chats, othersChatSet, myChatSet);\r\n            // setOtherChat(othersChatSet);\r\n            // setMyChat(myChatSet);\r\n            console.log(\"Trying not to look\");\r\n            console.log(chats.dontlook);\r\n            const sortedChats = collectAndSortMessages(chats.chatsData);\r\n            setAllChat(chats);\r\n\r\n        });\r\n        }\r\n    }, [chatStarted]);\r\n\r\n    const collectAndSortMessages = (allChats) => {\r\n        // const allChats = { ...otherChat, ...myChat };\r\n        let messages = [];\r\n        messages = allChats.sort((a,b) => a.time - b.time);\r\n        // allChats.forEach(user => {\r\n        //     const msgsOfUser = allChats[user].messages.map(message => {\r\n        //         return {\r\n        //             user,\r\n        //             time: message.time,\r\n        //             text: message.text\r\n        //         }\r\n        //     });\r\n        //     messages = messages.concat(msgsOfUser);\r\n        //     messages = messages.sort((a, b) => a.time - b.time);\r\n        // });\r\n\r\n        return messages;\r\n    }\r\n\r\n    const login = () => {\r\n        return (\r\n            <div style={divStyle}>\r\n                <div style={inputDiv}>\r\n                    <span>Room Name</span>\r\n                    <input style={inputStyle} key=\"roomname\" onChange={(e) => { setRoomName(e.target.value) }}></input>\r\n                </div>\r\n                <div style={inputDiv}>\r\n                    <span>User Name &nbsp;</span>\r\n                    <input style={inputStyle} key=\"username\" onChange={(e) => { setUserName(e.target.value) }}></input>\r\n                </div>\r\n                <div style={buttonDiv}>\r\n                    <button style={buttonStyle} onClick={() => {\r\n                        setrChatStarted(true);\r\n                        // const socket = io(window.location.origin, {transports: ['websocket']});\r\n                        const socket = io();\r\n                        socket.emit('joined', { roomName: roomName, username: userName });\r\n                    }}>Join Chat Room</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getTimeString = (timeStamp) => {\r\n        let time = new Date(Number(timeStamp));\r\n        return `${time.getHours()}:${time.getMinutes()}`;\r\n    }\r\n\r\n    const chatView = () => {\r\n        console.log(\"Rerendering chat view...\");\r\n        // const allChats = { ...otherChat, ...myChat };\r\n        // console.log({ ...otherChat, ...myChat });\r\n        console.log(allChat);\r\n        console.log(userName, roomName);\r\n        // const allMessages = collectAndSortMessages();\r\n        return (\r\n            <div>\r\n                <div className=\"msger\">\r\n                    <header className=\"msger-header\">\r\n                        <div className=\"msger-header-title\">\r\n                            <i className=\"fas fa-comment-alt\"></i> Sabha Chat Room - {roomName}\r\n                        </div>\r\n                        <div className=\"msger-header-options\">\r\n                            <span><i className=\"fas fa-cog\">{userName}</i></span>\r\n                        </div>\r\n                    </header>\r\n\r\n                    <div className=\"msger-chat\">\r\n                        {/* allMessages.map(...*/}\r\n                        {allChat.chatsData.map(message => {\r\n                            if (message.user !== userName) {\r\n                                return (\r\n                                    <div className=\"msg left-msg\">\r\n                                        <div\r\n                                            className=\"msg-img\"\r\n                                            style={{ backgroundImage: \"url(https://image.flaticon.com/icons/svg/327/327779.svg)\" }}\r\n                                        ></div>\r\n\r\n                                        <div className=\"msg-bubble\">\r\n                                            <div className=\"msg-info\">\r\n                                                <div className=\"msg-info-name\">{message.user}</div>\r\n                                                <div className=\"msg-info-time\">{getTimeString(message.time)}</div>\r\n                                            </div>\r\n\r\n                                            <div className=\"msg-text\">\r\n                                                {message.message}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else {\r\n                                return <div className=\"msg right-msg\">\r\n                                    <div\r\n                                        className=\"msg-img\"\r\n                                        style={{ backgroundImage: \"url(https://image.flaticon.com/icons/svg/145/145867.svg)\" }}\r\n                                    ></div>\r\n\r\n                                    <div className=\"msg-bubble\">\r\n                                        <div className=\"msg-info\">\r\n                                            <div className=\"msg-info-name\">{message.user}</div>\r\n                                            <div className=\"msg-info-time\">{getTimeString(message.time)}</div>\r\n                                        </div>\r\n\r\n                                        <div className=\"msg-text\">\r\n                                            {message.message}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        })\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <form className=\"msger-inputarea\" onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        // const socket = io(window.location.origin, {transports: ['websocket']});\r\n                        const socket = io();\r\n                        socket.emit('captureChat', {\r\n                            username: userName,\r\n                            roomName: roomName,\r\n                            message: {\r\n                                time: (new Date()).getTime(),\r\n                                text: chatInput\r\n                            }\r\n                        });\r\n                        allChat.chatsData.push({user: userName, message: chatInput, time: (new Date()).getTime()});\r\n                        setAllChat(allChat);\r\n                        setChatInput('');\r\n                    }}>\r\n                        <input type=\"text\" value={chatInput} onChange={(e) => { setChatInput(e.target.value) }} className=\"msger-input\" placeholder=\"Enter your message...\" />\r\n                        <button type=\"submit\" className=\"msger-send-btn\" >Send</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '35em' }}>\r\n            {chatStarted ? chatView() : login()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","/*eslint-disable*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { serverUrl } from './urls';\r\nconst socket = io();\r\nconst { RTCPeerConnection, RTCSessionDescription } = window;\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst peerConnection = new RTCPeerConnection();\r\n\r\nconst videoDiv = {\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n}\r\n\r\nconst video = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '80%',\r\n    height: '80%'\r\n}\r\n\r\nconst NativeMeet = (props) => {\r\n\r\n    let [streamedVideo, setStreamedVideo] = useState('');\r\n    let [allUsers, setAllUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const localVideo = document.getElementById('local-video');\r\n        console.log(\"Local video: \"+localVideo);\r\n        console.log(\"Streamed video is: \"+streamedVideo);\r\n        console.log(\"Server: \"+serverUrl());\r\n        console.log(\"Publi URL: \"+process.env.PUBLIC_URL);\r\n        console.log(\"Port: \"+process.env.PORT);\r\n        \r\n        let isAlreadyCalling = false;\r\n        // NEW EXP CODE\r\n        socket.on(\"update-user-list\", ({ users }) => {\r\n            updateUserList(users);\r\n        });\r\n        socket.on(\"remove-user\", ({ socketId }) => {\r\n            const elToRemove = document.getElementById(socketId);\r\n            \r\n            if (elToRemove) {\r\n              elToRemove.remove();\r\n            }\r\n        });\r\n        socket.on(\"call-made\", async data => {\r\n            await peerConnection.setRemoteDescription(\r\n              new RTCSessionDescription(data.offer)\r\n            );\r\n            const answer = await peerConnection.createAnswer();\r\n            await peerConnection.setLocalDescription(new RTCSessionDescription(answer));\r\n            \r\n            socket.emit(\"make-answer\", {\r\n              answer,\r\n              to: data.socket\r\n            });\r\n        });\r\n        socket.on(\"answer-made\", async data => {\r\n            await peerConnection.setRemoteDescription(\r\n              new RTCSessionDescription(data.answer)\r\n            );\r\n            \r\n            if (!isAlreadyCalling) {\r\n              callUser(data.socket);\r\n              isAlreadyCalling = true;\r\n            }\r\n        });\r\n\r\n        //OLD CODE\r\n        navigator.getUserMedia(\r\n            { video: true, audio: true },\r\n            async stream => {\r\n              if (localVideo && !streamedVideo) {\r\n                localVideo.srcObject = stream;\r\n                console.log(stream);\r\n                stream.getTracks().forEach(track => {peerConnection.addTrack(track, stream)})\r\n                // navigator.mediaDevices.getDisplayMedia().then((screenShare) => {\r\n                //     console.log(screenShare);\r\n                //     const allTracks = [];\r\n                //     peerConnection.addTrack(screenShare.getTracks()[0], screenShare);\r\n                //     // socket.emit('streaming', {id: 'local-video', audio: 'none', video: stream.getTracks()[0].id});\r\n                // }).catch(rej => {console.log(rej)});\r\n                // socket.emit('streaming', {id: 'local-video', audio: stream.getTracks()[0].id, video: stream.getTracks()[1].id});\r\n                !streamedVideo && setStreamedVideo('bla');\r\n              }\r\n            },\r\n            error => {\r\n              console.warn(error.message);\r\n            }\r\n        );\r\n        peerConnection.ontrack = function(stream) {\r\n            const remoteVideo = document.getElementById(\"streamed-video\");\r\n            if (remoteVideo) {\r\n                console.log(stream.streams[0]);\r\n                remoteVideo.srcObject = stream.streams[0];\r\n            \r\n            \r\n            }\r\n           };\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if(streamedVideo === 'bla') {\r\n            // const socket = io(\"http://localhost:3001\");\r\n            socket.on('listening', (msg) => {\r\n                console.log(msg);\r\n                if(msg.id) {\r\n                    const newMedia = new window.MediaStream();\r\n                    const actualMedia = document.getElementById(msg.id).srcObject.getTracks()\r\n                    newMedia.addTrack(actualMedia[0]);\r\n                    newMedia.addTrack(actualMedia[1]);\r\n                    let streamedVideo = document.getElementById('streamed-video');\r\n                    streamedVideo.srcObject = newMedia;\r\n                    setStreamedVideo('ad');\r\n                }\r\n            });\r\n\r\n            \r\n        }\r\n    },[]);\r\n    \r\n    const updateUserList = (users) => {\r\n        console.log(\"Users are: \", users);\r\n        setAllUsers(allUsers.concat(users));\r\n    }\r\n\r\n    async function callUser(socketId) {\r\n        const offer = await peerConnection.createOffer();\r\n        await peerConnection.setLocalDescription(new RTCSessionDescription(offer));\r\n        \r\n        socket.emit(\"call-user\", {\r\n          offer,\r\n          to: socketId\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <div style={{ height: '35em' }}>\r\n            <div className=\"content-container\">\r\n                <div className=\"video-chat-container\">\r\n                    <div className=\"video-container\" style={videoDiv}>\r\n                        <div style={video}>\r\n                            <h3>Me</h3>\r\n                            <video autoPlay muted className=\"local-video\" id=\"local-video\"></video>\r\n                        </div>\r\n                        <div style={video}>\r\n                            <h3>You</h3>\r\n                            <video autoPlay muted className=\"streamed-video\" id=\"streamed-video\">{streamedVideo}</video>\r\n                        </div>         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n    {allUsers.map(user => <li onClick={() => {callUser(user)}} key={user}><Button color=\"primary\">Call - {user}</Button></li>)}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NativeMeet;","/* eslint-disable */\r\nexport const serverUrl = () => {\r\n    let url = process.env.PUBLIC_URL;\r\n    let port = process.env.PORT;\r\n    if(process.env.NODE_ENV === 'development') {\r\n        return 'http://localhost:3001'\r\n    }\r\n    else return process.env.PUBLIC_URL;\r\n}","import React, {useState, useRef} from 'react';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { MicRounded, SyncAltRounded, ArrowRightAltRounded } from '@material-ui/icons';\r\nimport { IconButton } from '@material-ui/core'\r\n\r\nconst text2Speech = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '100px',\r\n    marginTop: '100px'\r\n}\r\n\r\nconst speech2Text = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    margin: '20px',\r\n    justifyContent: 'flex-end',\r\n    flexDirection: 'row-reverse'\r\n}\r\n\r\nconst TextNSpeech = () => {\r\n    \r\n    const synth = window.speechSynthesis;\r\n    const voices = synth.getVoices();\r\n    const colors = ['blue', 'green', 'black'];\r\n    const grammar = '#JSGF V1.0; grammar colors; public <color> = ' + colors.join(' | ') + ' ;'\r\n    const SpeechRecognition = window.webkitSpeechRecognition\r\n    const SpeechGrammarList = window.webkitSpeechGrammarList\r\n    const SpeechRecognitionEvent = window.webkitSpeechRecognitionEvent\r\n    const recognition = new SpeechRecognition();\r\n    const speechRecognitionList = new SpeechGrammarList();\r\n    speechRecognitionList.addFromString(grammar, 1);\r\n    recognition.grammars = speechRecognitionList;\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n    recognition.lang = \"en-US\";\r\n    // recognition.onstart = (e) => {\r\n    //     console.log(\"speech started\",e);\r\n    // }\r\n    recognition.onspeechend = (e) => {\r\n        console.log(\"speech ended\", e);\r\n        recognition.stop();\r\n        setIsRecording(false);\r\n    }\r\n    recognition.onresult = (e) => {\r\n        console.log(\"Nuvvu vaagindi:\",e);\r\n        // console.log(e.results[0][0].transcript);\r\n        textAreaRef.current.value = e.results[0][0].transcript\r\n\r\n\r\n    }\r\n    recognition.onnomatch = (e) => {\r\n        console.log(\"No Match!\", e);\r\n    }\r\n    recognition.onerror = (e) => {\r\n        console.log(\"Deep shit\", e);\r\n      }\r\n\r\n    const textAreaRef = useRef();\r\n    const [t2S, set2S] = useState(true);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n\r\n    function listen() {\r\n        // if(t2S) {\r\n        //     const text = textAreaRef.current.value;\r\n        //     if(text) {\r\n        //         const msg = new SpeechSynthesisUtterance(text);\r\n        //         msg.voice = voices[5];\r\n        //         synth.speak(msg); \r\n        //     }\r\n        // }\r\n        if(isRecording) {\r\n            // recognition.stop();\r\n            // recognition.onspeechend = (e) => {\r\n            //     console.log(\"Thank you!\",e)\r\n            // }\r\n            // setIsRecording(false);\r\n        }\r\n        else {\r\n            recognition.start();\r\n            recognition.onstart = (e) => {\r\n                console.log(\"Please speak loudly\",e);\r\n            }\r\n            setIsRecording(true);\r\n        }\r\n        \r\n    }\r\n\r\n    function speak() {\r\n        const msg = new SpeechSynthesisUtterance(textAreaRef.current.value);\r\n        msg.voice = voices[5];\r\n        synth.speak(msg); \r\n    }\r\n\r\n    function flipText2Speech() {\r\n        set2S(!t2S);\r\n        textAreaRef.current.value = '';\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style = {t2S ? text2Speech : speech2Text}>\r\n                <IconButton onClick = {listen}><MicRounded/></IconButton>\r\n                <IconButton color=\"primary\" ><ArrowRightAltRounded style={{margin: \"20px\"}}/></IconButton>  \r\n                <TextareaAutosize ref = {textAreaRef} style ={{width: \"500px\"}} aria-label=\"minimum height\" rowsMin={10} placeholder=\"Minimum 3 rows\" />\r\n                <IconButton color=\"primary\" ><ArrowRightAltRounded style={{margin: \"20px\"}}/></IconButton>\r\n                <IconButton onClick = {speak} ><MicRounded/></IconButton>    \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextNSpeech;","import React from 'react';\n// import Root from './Root';\nimport Meet from './Meet';\nimport Chat from './Chat';\nimport NativeMeet from './NativeMeet';\nimport TextNSpeech from './TextNSpeech';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className='navbar'>\n            <h3>SABHA</h3>\n            <Link to=\"/\">Jitsi</Link>\n            <Link to=\"/chat\">Chat</Link>\n            <Link to=\"/meet\">Meet</Link>\n            <Link to=\"/textnspeech\">Text and Speech</Link>\n          </div>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/chat\">\n          <Chat />\n          </Route>\n          <Route path=\"/meet\">\n          <div id=\"meet2\">\n            </div> \n            <NativeMeet />\n          </Route>\n          <Route path=\"/textnspeech\">\n            <TextNSpeech />\n          </Route>\n          <Route path=\"/\">\n            <Meet divId = 'meet'/> \n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('rootdiv')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// if(process.env.NODE_ENV === 'production') {\n//   serviceWorker.register();\n// }\n// else {\n//   serviceWorker.unregister();\n// }\n\n"],"sourceRoot":""}