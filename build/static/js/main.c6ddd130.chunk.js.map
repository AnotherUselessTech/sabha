{"version":3,"sources":["Meet.js","Chat.js","NativeMeet.js","urls.js","App.js","index.js"],"names":["inputStyle","width","lineHeight","borderRadius","border","padding","backgroundColor","marginLeft","buttonStyle","fontSize","marginTop","divStyle","display","margin","flexDirection","alignItems","inputDiv","flex","buttonDiv","meetStyle","toolbarStyleWhenYouSee","position","bottom","justifyContent","opacity","toolbarStyleWhenYouDontSee","transition","Meet","props","useState","jitsiState","setJitsiState","roomName","setRoomName","displayName","setDisplayName","jitsiFrame","setJitsitFrame","micEnabled","setMicEnabled","videoEnabled","setVideoEnabled","screenShareEnabled","setScreenShareEnabled","tileViewEnabled","setTileViewEnabled","mouseMoving","setMouseMoving","menuOpen","setMenuOpen","fullScreenMenu","setFullScreenMenu","anchorRef","React","useRef","prevOpen","options","height","parentNode","userInfo","onload","console","log","document","getElementById","divId","children","style","interfaceConfigOverwrite","TOOLBAR_BUTTONS","useEffect","JitsiMeetExternalAPI","window","jitsi","addEventListener","e","executeCommand","setTimeout","innerHeight","screen","current","focus","handleMenuToggle","handleMenuClose","contains","event","target","handleFullScreen","webkitRequestFullscreen","webkitExitFullscreen","id","onMouseMove","IconButton","onClick","ChatBubble","color","PanTool","MicRounded","MicOffRounded","VideoCallRounded","VideocamOffRounded","StopScreenShareRounded","ScreenShareRounded","dispose","CallEndRounded","marginRight","ViewComfyRounded","PersonRounded","PeopleRounded","ref","aria-controls","undefined","aria-haspopup","MoreVertRounded","Popper","open","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","MenuItem","onChange","value","Chat","userName","setUserName","chatStarted","setrChatStarted","chatInput","setChatInput","chatsData","allChat","setAllChat","socket","io","emit","on","chats","dontlook","collectAndSortMessages","allChats","sort","a","b","time","getTimeString","timeStamp","Date","Number","getHours","getMinutes","className","map","message","user","backgroundImage","onSubmit","preventDefault","username","getTime","text","push","type","placeholder","key","videoDiv","video","NativeMeet","streamedVideo","setStreamedVideo","localVideo","process","PORT","serverUrl","navigator","getUserMedia","audio","stream","srcObject","getTracks","error","warn","msg","newMedia","MediaStream","actualMedia","addTrack","autoPlay","muted","App","to","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6ddd130.chunk.js","sourcesContent":["\r\n/* eslint-disable */\r\nimport React, {useState, useEffect, Fragment} from 'react';\r\nimport { IconButton, Menu, MenuItem, ClickAwayListener, Popper, Grow, MenuList, Paper } from '@material-ui/core';\r\nimport { ChatBubble, PanTool, MicRounded, \r\n    VideoCallRounded, MicOffRounded, VideocamOffRounded, \r\n    PeopleRounded, ScreenShareRounded, StopScreenShareRounded, CallEndRounded,\r\n    ViewComfyRounded, PersonRounded, MoreVertRounded  } from '@material-ui/icons';\r\n\r\nconst inputStyle = {\r\n    width:'30%',\r\n    lineHeight: 2.5,\r\n    borderRadius: '4px',\r\n    border: '1px solid green',\r\n    padding: '5px',\r\n    backgroundColor:'#dcf4d1',\r\n    marginLeft: '10px'\r\n}\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: 'deepskyblue',\r\n    lineHeight: 2.5,\r\n    fontSize: 'medium',\r\n    borderRadius: '4px',\r\n    width: '30%',\r\n    marginTop: '30px'\r\n}\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    margin: '10%',\r\n    marginLeft: '30%',\r\n    width: '50%',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst inputDiv = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    margin: '10px',\r\n    alignItems: 'center',\r\n    flex: 1\r\n}\r\n\r\nconst buttonDiv = {\r\n    width: '100%',\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'flex-end'\r\n}\r\n\r\nconst meetStyle = {\r\n    // position: 'fixed'\r\n}\r\n\r\nconst toolbarStyleWhenYouSee = {\r\n    position: 'relative',\r\n    bottom: '70px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    opacity: '1'\r\n}\r\n\r\nconst toolbarStyleWhenYouDontSee = {\r\n    ...toolbarStyleWhenYouSee,\r\n    opacity: 0,\r\n    transition: 'opacity 1s ease-in-out'\r\n}\r\n\r\nexport default function Meet(props) {\r\n    \r\n    let [jitsiState, setJitsiState] = useState(false);\r\n    let [roomName, setRoomName] = useState('');\r\n    let [displayName, setDisplayName] = useState('Fellow Jitser');\r\n    let [jitsiFrame, setJitsitFrame] = useState();\r\n    let [micEnabled, setMicEnabled] = useState(true);\r\n    let [videoEnabled, setVideoEnabled] = useState(true);\r\n    let [screenShareEnabled, setScreenShareEnabled] = useState(false);\r\n    let [tileViewEnabled, setTileViewEnabled] = useState(false);\r\n    let [mouseMoving, setMouseMoving] = useState(false);\r\n    let [anchorMenu, setAnchorMenu] = useState(null);\r\n    let [menuOpen, setMenuOpen] = useState(false);\r\n    let [fullScreenMenu, setFullScreenMenu] = useState(\"Full Screen\");\r\n\r\n    const anchorRef = React.useRef(null);\r\n    const prevOpen = React.useRef(menuOpen);\r\n  \r\n    const domain = 'meet.jit.si';\r\n    const options = {\r\n      roomName: roomName,\r\n      height: '40em',\r\n      parentNode: '',\r\n      userInfo: {\r\n          displayName\r\n      },\r\n      onload: () => {\r\n        console.log(\"After load of iframe\");\r\n        const iframe = document.getElementById(props.divId).children[0];\r\n        iframe.style[\"pointer-events\"] = \"none\";\r\n      },\r\n      interfaceConfigOverwrite: {TOOLBAR_BUTTONS: []}\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n          if(jitsiState && roomName && !jitsiFrame) {\r\n              console.log(\"************************\\n\" + document.getElementById(props.divId));\r\n              const JitsiMeetExternalAPI = window.JitsiMeetExternalAPI;\r\n              setJitsiState(true);\r\n              options.parentNode = document.getElementById(props.divId);\r\n              // setJitsiParentNode(document.getElementById('meet'));\r\n              console.log(window.JitsiMeetExternalAPI);\r\n              const jitsi = new JitsiMeetExternalAPI(domain, options);\r\n              jitsi.addEventListener('screenSharingStatusChanged', (e) => {console.log(e);setScreenShareEnabled(!screenShareEnabled)});\r\n              jitsi.executeCommand('toggleFilmStrip')\r\n              setJitsitFrame(jitsi);\r\n          }\r\n        \r\n      }, [jitsiState,options,props.divId,roomName,jitsiFrame]);\r\n\r\n      useEffect(() => {\r\n        if(mouseMoving) {\r\n            setTimeout(() => {\r\n                setMouseMoving(false);\r\n            }, 3000);\r\n        }\r\n      });\r\n\r\n      useEffect(() => {\r\n        if( (window.innerHeight !== screen.height) && jitsiFrame) {\r\n            // browser is not fullscreen\r\n            document.getElementById(props.divId).children[0].style[\"height\"] = \"40em\";\r\n            setFullScreenMenu('Full Screen');\r\n        }\r\n      },[window.innerHeight !== screen.height]);\r\n\r\n      React.useEffect(() => {\r\n        if (prevOpen.current === true && menuOpen === false) {\r\n          anchorRef.current.focus();\r\n        }\r\n    \r\n        prevOpen.current = menuOpen;\r\n      }, [menuOpen]);\r\n\r\n      const handleMenuClick = (event) => {\r\n        setAnchorMenu(event.currentTarget);\r\n      };\r\n\r\n      const handleMenuToggle = () => {\r\n        setMenuOpen((prevOpen) => !prevOpen);\r\n      };\r\n    \r\n      const handleMenuClose = () => {\r\n        // setAnchorMenu(null);\r\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n            return;\r\n          }\r\n      \r\n          setMenuOpen(false);\r\n      };\r\n\r\n      const handleFullScreen = () => {\r\n        if(fullScreenMenu === 'Full Screen') {\r\n            document.getElementById('meetingParent').webkitRequestFullscreen();\r\n            document.getElementById(props.divId).children[0].style[\"height\"] = \"54em\";\r\n            setFullScreenMenu('Exit Full Screen');\r\n            setMenuOpen(false);\r\n        }\r\n        else {\r\n            document.webkitExitFullscreen();\r\n        }   \r\n      }\r\n\r\n    const toolbarContent = () => {\r\n        return (\r\n            <div style={mouseMoving ? toolbarStyleWhenYouSee : toolbarStyleWhenYouDontSee}>\r\n                        <div style = {{marginLeft: '10px'}}>\r\n                            <IconButton onClick = {() => {jitsiFrame.executeCommand(\"toggleChat\")}}><ChatBubble style={{color: 'white'}}/></IconButton>\r\n                            <IconButton onClick = {() => {jitsiFrame.executeCommand('')}}><PanTool style={{color: 'white'}} /></IconButton>\r\n                        </div>\r\n                        <div>\r\n                            <IconButton onClick = {() => {\r\n                                setMicEnabled(!micEnabled);\r\n                            jitsiFrame.executeCommand('toggleAudio')}}>{micEnabled ? <MicRounded style={{color: 'white'}}/> : <MicOffRounded style={{color: 'white'}}/>}</IconButton>\r\n                            <IconButton onClick = {() => {\r\n                                setVideoEnabled(!videoEnabled);\r\n                            jitsiFrame.executeCommand('toggleVideo')}}>{videoEnabled ? <VideoCallRounded style={{color: 'white'}}/> : <VideocamOffRounded style={{color: 'white'}}/>}</IconButton>\r\n                            <IconButton onClick = {() => {\r\n                                setScreenShareEnabled(!screenShareEnabled);\r\n                            jitsiFrame.executeCommand('toggleShareScreen')}}>{!screenShareEnabled ? <ScreenShareRounded style={{color: 'white'}}/> : <StopScreenShareRounded style={{color: 'white'}}/>}</IconButton>\r\n                            <IconButton onClick = {() => {\r\n                                jitsiFrame.executeCommand('hangup');\r\n                                jitsiFrame.dispose();\r\n                                setJitsiState(false);\r\n                                setJitsitFrame(null);\r\n                            }}><CallEndRounded style={{color: 'red'}}/></IconButton>\r\n                        </div>\r\n                        <div style = {{marginRight: '10px'}}>\r\n                            <IconButton onClick = {() => {\r\n                                setTileViewEnabled(!tileViewEnabled);\r\n                            jitsiFrame.executeCommand('toggleTileView')}}>{tileViewEnabled ? <ViewComfyRounded style={{color: 'white'}}/> : <PersonRounded style={{color: 'white'}}/>}</IconButton>\r\n                            \r\n                            <IconButton><PeopleRounded onClick={() => {jitsiFrame.executeCommand('toggleFilmStrip');}} style={{color: 'white'}}/></IconButton>\r\n                            <Fragment>\r\n                                <IconButton \r\n                                    ref={anchorRef}\r\n                                    aria-controls={menuOpen ? 'menu-list-grow' : undefined}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleMenuToggle}><MoreVertRounded style={{color: 'white'}}/></IconButton>\r\n                                <Popper open={menuOpen} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                                    {({ TransitionProps, placement }) => (\r\n                                        <Grow\r\n                                        {...TransitionProps}\r\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                                        >\r\n                                        <Paper>\r\n                                            <ClickAwayListener onClickAway={handleMenuClose}>\r\n                                            <MenuList autoFocusItem={menuOpen} id=\"menu-list-grow\">\r\n                                                <MenuItem onClick={handleFullScreen}>{fullScreenMenu}</MenuItem>\r\n                                                <MenuItem onClick={() => {jitsiFrame.executeCommand('muteEveryone');}}>Mute Everyone</MenuItem>\r\n                                            </MenuList>\r\n                                            </ClickAwayListener>\r\n                                        </Paper>\r\n                                        </Grow>\r\n                                    )}\r\n                                </Popper>\r\n                            </Fragment>\r\n                        </div>    \r\n                    </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           {!jitsiState ?\r\n                <div style={{height: '30em'}}>\r\n                <div style={divStyle}>\r\n                        <div style = {inputDiv}>\r\n                            <span>Room Name</span>\r\n                            <input style={inputStyle} onChange = {(e)=>{setRoomName(e.target.value)}}></input>\r\n                        </div>\r\n                        <div style = {inputDiv}>\r\n                            <span>User Name &nbsp;</span>\r\n                            <input style={inputStyle} onChange = {(e)=>{setDisplayName(e.target.value)}}></input>\r\n                        </div>\r\n                        <div style = {buttonDiv}>\r\n                            <button style={buttonStyle} onClick = {() => {setJitsiState(true)}}>Join Room</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div id=\"meetingParent\" style={{position: 'relative'}}>\r\n                    <div style={meetStyle} id=\"meet\" onMouseMove ={(e) => {\r\n                        setMouseMoving(true)}}/>\r\n                    {toolbarContent()}\r\n                   \r\n                </div>\r\n           }\r\n\r\n        </div>\r\n        \r\n    )\r\n}","/* eslint-disable */\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n// import Chat2 from './Chat2';\r\nimport './ChatStyles.css';\r\n// import { serverUrl } from './urls';\r\n\r\nconst inputStyle = {\r\n    width: '30%',\r\n    lineHeight: 2.5,\r\n    borderRadius: '4px',\r\n    border: '1px solid green',\r\n    padding: '5px',\r\n    backgroundColor: '#dcf4d1',\r\n    marginLeft: '10px'\r\n}\r\n\r\nconst chatInputStyle = {\r\n    width: '50%',\r\n    lineHeight: 2.5,\r\n    borderRadius: '4px',\r\n    border: '1px solid green',\r\n    padding: '5px',\r\n    backgroundColor: '#dcf4d1',\r\n    marginLeft: '10px'\r\n}\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: 'lightgreen',\r\n    lineHeight: 2.5,\r\n    fontSize: 'medium',\r\n    borderRadius: '4px',\r\n    width: '30%',\r\n    marginTop: '30px'\r\n}\r\n\r\nconst chatButtonStyle = {\r\n    backgroundColor: 'lightgreen',\r\n    lineHeight: 1.5,\r\n    fontSize: 'medium',\r\n    borderRadius: '4px',\r\n    width: '30%',\r\n    marginTop: '30px'\r\n}\r\n\r\nconst divStyle = {\r\n    display: 'flex',\r\n    margin: '10%',\r\n    marginLeft: '30%',\r\n    width: '50%',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n}\r\n\r\nconst inputDiv = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    margin: '10px',\r\n    alignItems: 'center',\r\n    flex: 1\r\n}\r\n\r\nconst buttonDiv = {\r\n    width: '100%',\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'flex-end'\r\n}\r\n\r\nconst Chat = () => {\r\n    const [userName, setUserName] = useState('');\r\n    const [roomName, setRoomName] = useState('');\r\n    const [chatStarted, setrChatStarted] = useState(false);\r\n    const [chatInput, setChatInput] = useState('');\r\n    const [otherChat, setOtherChat] = useState({});\r\n    const [myChat, setMyChat] = useState({});\r\n    const [allChat, setAllChat] = useState({chatsData: []});\r\n\r\n    const setUsersData = (chats, othersChatSet, myChatSet) => {\r\n        Object.keys(chats.chatsData).forEach(user => {\r\n            if (chats.chatsData[user].messages.length) {\r\n                if (user !== userName) {\r\n                    if (othersChatSet[user] && (chats.chatsData[user].messages.length !== othersChatSet[user].messages.length)) {\r\n                        console.log(1)\r\n                        othersChatSet[user] = { username: user, messages: chats.chatsData[user].messages };\r\n                        console.log(2)\r\n                        console.log(\"others chat changed\");\r\n                    }\r\n                    else if (!othersChatSet[user]) {\r\n                        othersChatSet[user] = { username: user, messages: chats.chatsData[user].messages };\r\n                        console.log(\"others chat created\");\r\n                    }\r\n                }\r\n                else {\r\n                    if (myChat[user] && (chats.chatsData[user].messages.length !== myChat[user].messages.length)) {\r\n                        myChatSet[user] = { username: user, messages: chats.chatsData[user].messages };\r\n                        console.log(\"my chat changed\");\r\n                    }\r\n                    else if (!myChatSet[user]) {\r\n                        myChatSet[user] = { username: user, messages: chats.chatsData[user].messages }\r\n                        console.log(\"my chat created\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(chatStarted) {\r\n            console.log(\"In effect, without socket!\")\r\n            // const socket = io(window.location.origin, {transports: ['websocket']});\r\n            const socket = io();\r\n            socket.emit('initialize', {roomName});\r\n            socket.on('otherschatreplies', (chats) => {\r\n            let myChatSet = {};\r\n            let othersChatSet = {};\r\n            // setUsersData(chats, othersChatSet, myChatSet);\r\n            // setOtherChat(othersChatSet);\r\n            // setMyChat(myChatSet);\r\n            console.log(\"Trying not to look\");\r\n            console.log(chats.dontlook);\r\n            const sortedChats = collectAndSortMessages(chats.chatsData);\r\n            setAllChat(chats);\r\n\r\n        });\r\n        }\r\n    }, [chatStarted]);\r\n\r\n    const collectAndSortMessages = (allChats) => {\r\n        // const allChats = { ...otherChat, ...myChat };\r\n        let messages = [];\r\n        messages = allChats.sort((a,b) => a.time - b.time);\r\n        // allChats.forEach(user => {\r\n        //     const msgsOfUser = allChats[user].messages.map(message => {\r\n        //         return {\r\n        //             user,\r\n        //             time: message.time,\r\n        //             text: message.text\r\n        //         }\r\n        //     });\r\n        //     messages = messages.concat(msgsOfUser);\r\n        //     messages = messages.sort((a, b) => a.time - b.time);\r\n        // });\r\n\r\n        return messages;\r\n    }\r\n\r\n    const login = () => {\r\n        return (\r\n            <div style={divStyle}>\r\n                <div style={inputDiv}>\r\n                    <span>Room Name</span>\r\n                    <input style={inputStyle} key=\"roomname\" onChange={(e) => { setRoomName(e.target.value) }}></input>\r\n                </div>\r\n                <div style={inputDiv}>\r\n                    <span>User Name &nbsp;</span>\r\n                    <input style={inputStyle} key=\"username\" onChange={(e) => { setUserName(e.target.value) }}></input>\r\n                </div>\r\n                <div style={buttonDiv}>\r\n                    <button style={buttonStyle} onClick={() => {\r\n                        setrChatStarted(true);\r\n                        // const socket = io(window.location.origin, {transports: ['websocket']});\r\n                        const socket = io();\r\n                        socket.emit('joined', { roomName: roomName, username: userName });\r\n                    }}>Join Chat Room</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const getTimeString = (timeStamp) => {\r\n        let time = new Date(Number(timeStamp));\r\n        return `${time.getHours()}:${time.getMinutes()}`;\r\n    }\r\n\r\n    const chatView = () => {\r\n        console.log(\"Rerendering chat view...\");\r\n        // const allChats = { ...otherChat, ...myChat };\r\n        // console.log({ ...otherChat, ...myChat });\r\n        console.log(allChat);\r\n        console.log(userName, roomName);\r\n        // const allMessages = collectAndSortMessages();\r\n        return (\r\n            <div>\r\n                <div className=\"msger\">\r\n                    <header className=\"msger-header\">\r\n                        <div className=\"msger-header-title\">\r\n                            <i className=\"fas fa-comment-alt\"></i> Sabha Chat Room - {roomName}\r\n                        </div>\r\n                        <div className=\"msger-header-options\">\r\n                            <span><i className=\"fas fa-cog\">{userName}</i></span>\r\n                        </div>\r\n                    </header>\r\n\r\n                    <div className=\"msger-chat\">\r\n                        {/* allMessages.map(...*/}\r\n                        {allChat.chatsData.map(message => {\r\n                            if (message.user !== userName) {\r\n                                return (\r\n                                    <div className=\"msg left-msg\">\r\n                                        <div\r\n                                            className=\"msg-img\"\r\n                                            style={{ backgroundImage: \"url(https://image.flaticon.com/icons/svg/327/327779.svg)\" }}\r\n                                        ></div>\r\n\r\n                                        <div className=\"msg-bubble\">\r\n                                            <div className=\"msg-info\">\r\n                                                <div className=\"msg-info-name\">{message.user}</div>\r\n                                                <div className=\"msg-info-time\">{getTimeString(message.time)}</div>\r\n                                            </div>\r\n\r\n                                            <div className=\"msg-text\">\r\n                                                {message.message}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            else {\r\n                                return <div className=\"msg right-msg\">\r\n                                    <div\r\n                                        className=\"msg-img\"\r\n                                        style={{ backgroundImage: \"url(https://image.flaticon.com/icons/svg/145/145867.svg)\" }}\r\n                                    ></div>\r\n\r\n                                    <div className=\"msg-bubble\">\r\n                                        <div className=\"msg-info\">\r\n                                            <div className=\"msg-info-name\">{message.user}</div>\r\n                                            <div className=\"msg-info-time\">{getTimeString(message.time)}</div>\r\n                                        </div>\r\n\r\n                                        <div className=\"msg-text\">\r\n                                            {message.message}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        })\r\n\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <form className=\"msger-inputarea\" onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        // const socket = io(window.location.origin, {transports: ['websocket']});\r\n                        const socket = io();\r\n                        socket.emit('captureChat', {\r\n                            username: userName,\r\n                            roomName: roomName,\r\n                            message: {\r\n                                time: (new Date()).getTime(),\r\n                                text: chatInput\r\n                            }\r\n                        });\r\n                        allChat.chatsData.push({user: userName, message: chatInput, time: (new Date()).getTime()});\r\n                        setAllChat(allChat);\r\n                        setChatInput('');\r\n                    }}>\r\n                        <input type=\"text\" value={chatInput} onChange={(e) => { setChatInput(e.target.value) }} className=\"msger-input\" placeholder=\"Enter your message...\" />\r\n                        <button type=\"submit\" className=\"msger-send-btn\" >Send</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '35em' }}>\r\n            {chatStarted ? chatView() : login()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { serverUrl } from './urls';\r\nconst videoDiv = {\r\n    display: 'flex',\r\n    justifyContent: 'space-around'\r\n}\r\n\r\nconst video = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '80%',\r\n    height: '80%'\r\n}\r\n\r\nconst NativeMeet = (props) => {\r\n\r\n    let [streamedVideo, setStreamedVideo] = useState('');\r\n\r\n    useEffect(() => {\r\n        const localVideo = document.getElementById('local-video');\r\n        console.log(\"Local video: \"+localVideo);\r\n        console.log(\"Streamed video is: \"+streamedVideo);\r\n        console.log(\"Server: \"+serverUrl());\r\n        console.log(\"Publi URL: \"+process.env.PUBLIC_URL);\r\n        console.log(\"Port: \"+process.env.PORT);\r\n        const socket = io();\r\n        navigator.getUserMedia(\r\n            { video: true, audio: true },\r\n            stream => {\r\n              if (localVideo) {\r\n                localVideo.srcObject = stream;\r\n                console.log(stream);\r\n                socket.emit('streaming', {id: 'local-video', audio: stream.getTracks()[0].id, video: stream.getTracks()[1].id});\r\n                !streamedVideo && setStreamedVideo('bla');\r\n              }\r\n            },\r\n            error => {\r\n              console.warn(error.message);\r\n            }\r\n           );\r\n    }, [streamedVideo]);\r\n    \r\n    useEffect(() => {\r\n        if(streamedVideo === 'bla') {\r\n            const socket = io();\r\n            socket.on('listening', (msg) => {\r\n                console.log(msg);\r\n                if(msg.id) {\r\n                    const newMedia = new window.MediaStream();\r\n                    const actualMedia = document.getElementById(msg.id).srcObject.getTracks()\r\n                    newMedia.addTrack(actualMedia[0]);\r\n                    newMedia.addTrack(actualMedia[1]);\r\n                    let streamedVideo = document.getElementById('streamed-video');\r\n                    streamedVideo.srcObject = newMedia;\r\n                    setStreamedVideo('ad');\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div style={{ height: '35em' }}>\r\n            <div className=\"content-container\">\r\n                <div className=\"video-chat-container\">\r\n                    <div className=\"video-container\" style={videoDiv}>\r\n                        <div style={video}>\r\n                            <h3>Me</h3>\r\n                            <video autoPlay muted className=\"local-video\" id=\"local-video\"></video>\r\n                        </div>\r\n                        <div style={video}>\r\n                            <h3>You</h3>\r\n                            <video autoPlay muted className=\"streamed-video\" id=\"streamed-video\">{streamedVideo}</video>\r\n                        </div>         \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NativeMeet;","/* eslint-disable */\r\nexport const serverUrl = () => {\r\n    let url = process.env.PUBLIC_URL;\r\n    let port = process.env.PORT;\r\n    if(process.env.NODE_ENV === 'development') {\r\n        return 'http://localhost:3001'\r\n    }\r\n    else return process.env.PUBLIC_URL;\r\n}","import React from 'react';\n// import Root from './Root';\nimport Meet from './Meet';\nimport Chat from './Chat';\nimport NativeMeet from './NativeMeet';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className='navbar'>\n            <h3>SABHA</h3>\n            <Link to=\"/\">Jitsi</Link>\n            <Link to=\"/chat\">Chat</Link>\n            <Link to=\"/meet\">Meet</Link>\n          </div>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/chat\">\n          <Chat />\n          </Route>\n          <Route path=\"/meet\">\n          <div id=\"meet2\">\n            </div> \n            <NativeMeet />\n          </Route>\n          <Route path=\"/\">\n            <Meet divId = 'meet'/> \n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('rootdiv')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// if(process.env.NODE_ENV === 'production') {\n//   serviceWorker.register();\n// }\n// else {\n//   serviceWorker.unregister();\n// }\n\n"],"sourceRoot":""}